{"ast":null,"code":"var _jsxFileName = \"/Users/saadiasial/trilogy/assignments/redux-store/client/src/components/ProductItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"; // removed GlobalState import for redux\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductItem(item) {\n  _s();\n\n  // removed useStoreContext\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item; // insert for state\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === _id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', { ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item,\n          purchaseQuantity: 1\n        }\n      });\n      idbPromise('cart', 'put', { ...item,\n        purchaseQuantity: 1\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card px-1 py-1\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/products/${_id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: name,\n        src: `/images/${image}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [quantity, \" \", pluralize(\"item\", quantity), \" in stock\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$\", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addToCart,\n      children: \"Add to cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductItem, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/Users/saadiasial/trilogy/assignments/redux-store/client/src/components/ProductItem/index.js"],"names":["React","Link","pluralize","useSelector","useDispatch","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","ProductItem","item","image","name","_id","price","quantity","state","dispatch","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,qBAAlD;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AAAA;;AACzB;AAEA,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA;AALI,MAMFL,IANJ,CAHyB,CAWzB;;AACA,QAAMM,KAAK,GAAGZ,WAAW,CAACY,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAM;AAAEa,IAAAA;AAAF,MAAWF,KAAjB;;AAEA,QAAMG,SAAS,GAAG,MAAM;AACtB,UAAMC,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAWC,QAAD,IAAcA,QAAQ,CAACT,GAAT,KAAiBA,GAAzC,CAAnB;;AACA,QAAIO,UAAJ,EAAgB;AACdH,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEhB,oBADC;AAEPM,QAAAA,GAAG,EAAEA,GAFE;AAGPW,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAHnD,OAAD,CAAR;AAKAhB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EACxB,GAAGY,UADqB;AAExBI,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAFlC,OAAhB,CAAV;AAID,KAVD,MAUO;AACLP,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEjB,WADC;AAEPoB,QAAAA,OAAO,EAAE,EAAE,GAAGhB,IAAL;AAAWc,UAAAA,gBAAgB,EAAE;AAA7B;AAFF,OAAD,CAAR;AAIAhB,MAAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAE,GAAGE,IAAL;AAAWc,QAAAA,gBAAgB,EAAE;AAA7B,OAAhB,CAAV;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYX,GAAI,EAA3B;AAAA,8BACE;AACE,QAAA,GAAG,EAAED,IADP;AAEE,QAAA,GAAG,EAAG,WAAUD,KAAM;AAFxB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,8BACE;AAAA,mBAAMG,QAAN,OAAiBZ,SAAS,CAAC,MAAD,EAASY,QAAT,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,wBAAQD,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE;AAAQ,MAAA,OAAO,EAAEK,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtDQV,W;UAYOL,W,EACGC,W;;;KAbVI,W;AAwDT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\n// removed GlobalState import for redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  // removed useStoreContext\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  // insert for state\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}